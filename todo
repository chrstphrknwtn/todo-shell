#!/usr/bin/env sh

#
# be posixy
#
set -o posix

#
# be helpful
#
help() {
  cat <<-EOF

  Todone!
  A basic todo list.

  Options:
    -a, --add <todo text>        Add a todo
    -d, --delete <todo text>     Delete a todo
    -o, --open                   Open a todo
    -l, --list                   List all todos
    -c, --clear                  Clear all todos
    -h, --help                   Show this help message

EOF
}

#
# abort with <msg>
#
abort() {
  printf "\n\033[31m✖\033[0m %s\n\n" "$@" 1>&2
  exit 1
}

#
# success with <msg>
#
success() {
  printf "\n\033[32m✔︎\033[0m %s\n\n" "$@"
}

#
# todo not found
#
abort_notfound() {
  abort "'$NAME' isn't a todo"
}

#
# todo name not entered
#
abort_noname() {
  abort "Enter a todo name"
}

#
# Make sure the todo folder exists
#
check_create_tododir() {
  if [ $TODONE_DIR ]; then
    TODODIR=$TODONE_DIR
  else
    TODODIR="$HOME/.todone"
  fi
  command mkdir -p $TODODIR
}

#
# add a todo
#
add() {
  local NAME="$@"
  local FILEPATH="$TODODIR/$NAME.md"

  if [ ! "$NAME" ]; then
    abort_noname
  fi

  if [ ! -f "$FILEPATH" ]; then
    touch "$FILEPATH"
    printf "# %s" "$NAME" >> "$FILEPATH"
    success "'$NAME' todo added"
  else
    abort "'$NAME' is already a todo"
  fi
}

#
# delete a todo
#
delete() {
  local NAME="$@"
  local FILEPATH="$TODODIR/$NAME.md"

  if [ ! "$NAME" ]; then
    abort_noname
  fi

  if [ -f "$FILEPATH" ]; then
    rm "$FILEPATH" &> /dev/null
    success "'$NAME' todo deleted"
  else
    abort_notfound
  fi
}

#
# open a todo
#
open() {
  local NAME="$@"
  local FILEPATH="$TODODIR/$NAME.md"

  if [ ! "$NAME" ]; then
    abort "Enter a todo to open"
  fi

  if [ $EDITOR ]; then
    local opener=$EDITOR
  else
    local opener="open"
  fi

  if [ -f "$FILEPATH" ]; then
    command $opener "$FILEPATH"
  else
    abort_notfound
  fi
}

#
# clear all todos
#
clear() {
  read -r -p "Are you sure? [y/N] " response
  case $response in
    [yY][eE][sS]|[yY])
      rm $TODODIR/*.md &> /dev/null
      success "Cleared todos"
      ;;
  esac
}

#
# Are we todone?
#
are_we_todone() {
  if [ ! "`ls -tr $TODODIR`" ]; then
    success "Todone!"
    exit
  fi
}

#
# lists todos
#
list() {
  are_we_todone

  printf "\n"
  command ls -tr $TODODIR | while read TODO;
  do
    printf "%s " $TODO | awk '{sub(/.md/, ""); print "· " $0}'
  done
  printf "\n"
}

#
# Todo it
#
check_create_tododir

# parse argv
while test $# -ne 0; do
  arg=$1; shift
  case $arg in
    -a|--add) add $@; exit ;;
    -d|--delete) delete $@; exit ;;
    -o|--open) open $@; exit ;;
    -c|--clear) clear; exit ;;
    -d|--list) list; exit ;;
    -h|--help) help; exit ;;
    *)
      test $# -eq 1 || abort "Unknown option"
  esac
done

# list todos if no args
list
